---
title: "Getting started with R"
author: Mathieu FranÃ§ois
date: "23/09/2024"
format: html
---

### Exercise 1 {#sec-1}

* Create a vector of the letters A, B and C.

```{r}
c("A", "B", "C")

```
> Create a vector with "A", "B", "C" using c()



* Assign the vector to a variable `my_letters`
```{r}
my_letters <- c("A", "B", "C")

```


* Check the what happens when you run `letters` (just this) on the command line.
```{r}
letters
```

> It prints all the lowercase letters from a to z.



* What happens when you concatenate two vectors? Add `c(my_letters , my_letters)`
```{r}
c(my_letters , my_letters)


```

> It outputs a vector with the letters A, B, C, A, B, C.



* Add the number 1 to letters. What happens to the type of the vector?
```{r}
letters + 1


```

> It outputs an error: "non-numeric argument to binary operator".



### Exercise 2


1. Create a vector `my_vec` with the numbers from 1 through 8.
2. Apply the operation `+2` to the vector/
3. Add the vector containing 1, 2, 3, 4 to `my_vec`. What do you observe?

```{r}
my_vec <- 1:8
my_vec + 2
my_vec + c(1, 2, 3, 4)




```
> +2 adds 2 to ech element of the vector.
> the vector c(1, 2, 3, 4) is added following the recycling rule. (1+1, 2+2, 3+3, 4+4, 1+5, 2+6, 3+7, 4+8)


### Exercise 3

* Consider the R output of the matrix below:

```
 [,1] [,2]
 [1,]    4    1
 [2,]    9    5
 [3,]   10    7
```

1. What was one of the correct commands used to write this matrix?
2. Assign the matrix as `A`
3. Check the dimensions
4. Extract the element `5`
5. Add the vector `c(0,0,0)` as a new column and update `A`
6. Modify the element 4 to `0`
7. Compute the transpose of `A`

```{r}
# 1. 
matrix(c(4, 9, 10, 1, 5, 7), nrow = 3, ncol = 2)

# 2.
A <- matrix(c(4, 9, 10, 1, 5, 7), nrow = 3, ncol = 2)

# 3.
dim(A)

# 4.
A[2, 2]

# 5.
A <- cbind(A, c(0, 0, 0))
A

# 6.
A[1, 1] <- 0

# 7.
t(A)




```


8. Are any values in `A` larger than 10? 
```{r}
A > 10

```

9. Are all values in `A` smaller than 10?
```{r}
A < 10

```

### Exercise 4

1. Create a function that sums up two values even if provided as characters values

```{r}
sum_values <- function(x, y){
  as.numeric(x) + as.numeric(y)
}


sum_values("12", 2)


```


### Exercise 5

1. Create a function that returns the mean, median and standard deviation.

```{r}
return_mean_median_sd <- function(x){
  mean_x <- mean(x)
  median_x <- median(x)
  sd_x <- sd(x)
  return(data.frame(mean = mean_x, median = median_x, sd = sd_x))
}

return_mean_median_sd(1:10)

```


### Exercise 6
1. Create a pipe statement that counts the number of NAs in vector containing numbers, characters and missing values.
The output of `c('1' , "a", NA, "2", NA)` should be 2.

```{r}
c('1' , "a", NA, "2", NA) |> is.na() |> sum()



```


